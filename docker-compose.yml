version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    working_dir: /var/www
    volumes:
      - .:/var/www   # Monte le projet depuis Windows
      # On ne monte pas storage et bootstrap/cache pour éviter les problèmes de permissions
    depends_on:
      - mysql
    environment:
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: "0"
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: root
    networks:
      - app-network
    entrypoint: >
      sh -c "
        git config --global --add safe.directory /var/www &&
        composer install --no-interaction --optimize-autoloader &&
        cp .env.example .env || true &&
        mkdir -p storage bootstrap/cache &&
        php artisan key:generate &&
        php artisan migrate --force &&
        php artisan storage:link &&
        php artisan serve --host=0.0.0.0 --port=8000
      "

  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    networks:
      - app-network

  web:
    image: nginx:1.29-alpine
    container_name: nginx-web
    ports:
      - "8000:80"
    volumes:
      - .:/var/www:ro
      - ./nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
